trigger:
- main

variables:
  buildConfiguration: 'Release'

stages:
- stage: 'Build'
  displayName: 'Build stage'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'windows-latest'

    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET 5 SDK'
      inputs:
        packageType: 'sdk'
        version: '5.x'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build $(buildConfiguration)'
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--no-restore --configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet test $(buildConfiguration)'
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
        publishTestResults: true

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build MovieSellerDb $(buildConfiguration)'
      inputs:
        command: 'build'
        projects: 'src/MovieSellerDb/MovieSellerDb.csproj'
        arguments: '--output $(Build.BinariesDirectory)/$(buildConfiguration) --configuration $(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      displayName: 'dotnet publish MovieSellerDb $(buildConfiguration)'
      inputs:
        PathtoPublish: '$(Build.BinariesDirectory)/$(buildConfiguration)'
        ArtifactName: 'MovieSellerDatabase'
        publishLocation: 'Container'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish $(buildConfiguration)'
      inputs:
        command: publish
        projects: 'src/MovieSeller/MovieSeller.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: MovieSellerWeb



- stage: 'Deploy'
  displayName: 'Deployment stage'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-18.04'
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: MovieSellerWeb
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: $(WebAppName)'
            inputs:
              azureSubscription: 'Resource Manager - Collaboration'
              appName: '$(WebAppName)'
              appType: webAppLinux
              package: '$(Pipeline.Workspace)/MovieSellerWeb/$(buildConfiguration)/*.zip'
